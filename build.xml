<project name="picoded.JavaCommons" default="source">
	<property name="ant.build.javac.source" value="1.7"/>
	<property name="ant.build.javac.target" value="1.7"/>
	
	<property name='lib.dir' value='./bin/lib' />
	
	<!-- **************************************************
	The following lists the target sets supported by ant
	
	+ setup
	+ clean
	+ compile-lib
	+ compile-src
	+ compile-srcX
	+ compile-tests
	+ compile
	+ build
	+ src-beautify
	
	************************************************** -->
	
	<!-- Dummy codes for future refence (to use?)
	<presetdef name="javac">
    	<javac includeantruntime="false" />
  	</presetdef>
	
	<taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
		<classpath>
			<pathelement path="bin" />
			<fileset dir="./lib" includes="**/*.jar" />
		</classpath>
  	</taskdef>
	
	<antcall target="doSomethingElse">
		<param name="param1" value="value"/>
	</antcall>
	 -->
	
	<target name="setup">
		<mkdir dir=".git/hooks"/>
		<symlink link="./pre-commit.sh" resource=".git/hooks/pre-commit" failonerror="false"/>
	</target>
	
	
	<target name="clean">
		<delete dir="test-reports" failonerror="false"/>
		<delete dir="html-docs" failonerror="false"/>
		
		<delete dir="bin" failonerror="false"/>
		<mkdir dir="bin"/>
		
		<delete dir="test-files/tmp" failonerror="false"/>
		<mkdir dir="test-files/tmp"/>
	</target>
	
	<target name="compile-lib">
		<copy todir="bin/lib">
			<fileset dir="lib-organized"/>
			<cutdirsmapper dirs="1"/>
		</copy>
	</target>
	
	<target name="compile-src" depends="compile-lib">
		<mkdir dir="bin/classes"/>
		<path id="lib.path.ref">
			<fileset dir="bin/lib" includes="**/*.jar" />
		</path>
		<javac destdir="bin/classes" classpathref="lib.path.ref" debug="true" debuglevel="lines,source" 
				 includeantruntime="false" bootclasspath="./build-tools/rt-stubs/java-rt-jar-stubs-1.5.0.jar">
			<compilerarg value="-Xlint:all"/>
			<src path="src/picoded"/>
			<exclude name="**/package-info.java"/>
		</javac>
	</target>
	
	<target name="compile-srcX" depends="compile-lib">
		<mkdir dir="bin/classes"/>
		<path id="lib.path.ref">
			<fileset dir="bin/lib" includes="**/*.jar" />
		</path>
		<javac destdir="bin/classes" classpathref="lib.path.ref" debug="true" debuglevel="lines,source" 
				 includeantruntime="false" bootclasspath="./build-tools/rt-stubs/java-rt-jar-stubs-1.5.0.jar">
			<compilerarg value="-Xlint:unchecked"/>
			<src path="src/picodedX"/>
			<exclude name="**/package-info.java"/>
		</javac>
	</target>
	
	<target name="compile-tests">
		<delete dir="test-files/tmp" failonerror="false"/>
		<mkdir dir="test-files/tmp"/>
		
		<mkdir dir="bin/classes"/>
		<path id="lib.path.ref">
			<fileset dir="bin/lib" includes="**/*.jar" />
		</path>
		<javac destdir="bin/classes" classpathref="lib.path.ref" debug="true" debuglevel="lines,source" 
				 includeantruntime="false" bootclasspath="./build-tools/rt-stubs/java-rt-jar-stubs-1.5.0.jar">
			<compilerarg value="-Xlint:all"/>
			<src path="src/picoded"/>
			<src path="src/picodedTests"/>
			<exclude name="**/package-info.java"/>
		</javac>
	</target>
	
	<target name="build" depends="compile-src">
		<mkdir dir="bin/build"/>
		<jar destfile="bin/build/picodedJavaCommons.jar"
			  basedir="./">
			<fileset dir="./bin/classes" includes="**/*.class"/>
			<fileset dir="./bin/lib" includes="**/*.jar" />
		</jar>
	</target>
	
	
	<!-- Code Beautifier, used for pre-commit hook -->
	<target name="src-beautify">
		
		<!-- Delete cleanedup code -->
		<delete>
			<fileset dir="./src" includes="**/formatted_*.java"/>
		</delete>

		<!-- Scan and beautify the code : spaces only -->
		<exec executable="java">
			<arg value="-cp"/>
			<arg value="./build-tools/java-formatter/java-formatter-with-dependencies.jar"/>
			<arg value="Formatter"/>
			<arg value="./code-format.opts"/>
			<arg value="./src"/>
		</exec>
		
		<!-- Scan and convert to smart tabs -->
		<!--
		<replaceregexp flags="g" byline="true">
			<regexp pattern="(?:^\s*)(\s{3,3})"/>
			<substitution expression="&#x0009;"/>
			
			<fileset dir="./src" includes="**/*.java"/>
		</replaceregexp>
		-->
		
	</target>
	
	<!-- convinent aliases -->
	<target name="compile" depends="compile-src">
	</target>
	
	<target name="source" depends="compile-src">
	</target>
	
</project>
