<project name="picoded.JavaCommons.ServletBase" default="source" xmlns:jacoco="antlib:org.jacoco.ant">
	<property name="ant.build.javac.source" value="1.8"/>
	<property name="ant.build.javac.target" value="1.8"/>
	
	<!--
	#
	# JavaCommons library setup / update
	#
	-->
	
	<!-- GIT Clone and pull commands -->
	<macrodef name = "git">
		<attribute name = "command" />
		<attribute name = "dir" default = "" />
		<element name = "args" optional = "true" />
		<sequential>
			<echo message = "git @{command}" />
			<exec executable = "git" dir = "@{dir}">
				<arg value = "@{command}" />
				<args/>
			</exec>
		</sequential>
	</macrodef>
	<macrodef name = "git-clone-pull">
		<attribute name = "repository" />
		<attribute name = "dest" />
		<sequential>
			<git command = "clone">
				<args>
					<arg value = "@{repository}" />
					<arg value = "@{dest}" />
				</args>
			</git>
			<git command = "pull" dir = "@{dest}" />
		</sequential>
	</macrodef>
	
	<!-- JavaCommons library location -->
	<property name='javacommons.lib.git.http' value='http://gitlab.picoded-dev.com/picoded/javacommons.git' />
	<property name='javacommons.lib.src.dir' value='${basedir}/JavaCommons' />
	<property name='javacommons.lib.build.dir' value='${basedir}/JavaCommons/bin/build' />
	<property name='webinf.lib.dir' value='${basedir}/lib' />
	
	<!-- Clone (if needed) and pull the JavaCommons library -->
	<target name="pullJavaCommons">
		<git-clone-pull repository="${javacommons.lib.git.http}" dest="${javacommons.lib.src.dir}" />
	</target>
	
	<target name="buildJavaCommons">
		<exec executable="ant" dir="${javacommons.lib.src.dir}">
			<arg value="build-src"/>
		</exec>
		<antcall target="copyJavaCommonsLibs"/>
		<antcall target="copyLooseJavaCommonsLibs"/>
	</target>
	
	<target name="cleanBuildJavaCommons">
		<exec executable="ant" dir="${javacommons.lib.src.dir}">
			<arg value="clean"/>
		</exec>
		<exec executable="ant" dir="${javacommons.lib.src.dir}">
			<arg value="build"/>
		</exec>
		<antcall target="copyJavaCommonsLibs"/>
	</target>
	
	<!-- Copies over the java commons files, if newer -->
	<target name="copyJavaCommonsLibs">
		<copy todir="${webinf.lib.dir}">
			<fileset dir="${javacommons.lib.build.dir}">
				<!--<include name="picodedJavaCommons-libsOnly.jar"/>-->
				<include name="picodedJavaCommons-noLibs.jar"/>
			</fileset>
		</copy>
	</target>
	
	<property name='javacommons.lib.dir' value='${basedir}/JavaCommons/lib-organized' />
	<target name="copyLooseJavaCommonsLibs" depends="copyJavaCommonsLibs">
		<copy todir="${webinf.lib.dir}" flatten="true">
			<fileset dir="${javacommons.lib.dir}" includes="**/*.jar">
			</fileset>
		</copy>
	</target>
	
	<!--
	#
	# Project compilation
	#
	-->
	<property name='webinf.lib.dir' value='${basedir}/lib' />
	<property name='webinf.classes.dir' value='${basedir}/classes' />
	<property name='webinf.src.dir' value='${basedir}/src' />
	
	<!-- compile the source -->
	<target name="source">
		<path id="lib.path.ref">
			<fileset dir="${webinf.lib.dir}" includes="*.jar" />
		</path>
		
		<mkdir dir="${webinf.classes.dir}"/>
		<javac destdir="${webinf.classes.dir}" classpathref="lib.path.ref" debug="true" debuglevel="lines,source" 
				 includeantruntime="false">
			<!-- bootclasspath="./build-tools/rt-stubs/java-rt-jar-stubs-1.5.0.jar" -->
			<compilerarg value="-Xlint:all"/>
			<compilerarg value="-Xlint:-serial"/>
			<src path="${webinf.src.dir}"/>
			<exclude name="**/package-info.java"/>
		</javac>
	</target>
	
	
	
</project>
